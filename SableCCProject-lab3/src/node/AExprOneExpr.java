/* This file was generated by SableCC (http://www.sablecc.org/). */

package node;

import analysis.*;

@SuppressWarnings("nls")
public final class AExprOneExpr extends PExpr
{
    private PExpr _expr_;
    private TOrOprtn _orOprtn_;
    private PExprLogical _exprLogical_;

    public AExprOneExpr()
    {
        // Constructor
    }

    public AExprOneExpr(
        @SuppressWarnings("hiding") PExpr _expr_,
        @SuppressWarnings("hiding") TOrOprtn _orOprtn_,
        @SuppressWarnings("hiding") PExprLogical _exprLogical_)
    {
        // Constructor
        setExpr(_expr_);

        setOrOprtn(_orOprtn_);

        setExprLogical(_exprLogical_);

    }

    @Override
    public Object clone()
    {
        return new AExprOneExpr(
            cloneNode(this._expr_),
            cloneNode(this._orOprtn_),
            cloneNode(this._exprLogical_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAExprOneExpr(this);
    }

    public PExpr getExpr()
    {
        return this._expr_;
    }

    public void setExpr(PExpr node)
    {
        if(this._expr_ != null)
        {
            this._expr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expr_ = node;
    }

    public TOrOprtn getOrOprtn()
    {
        return this._orOprtn_;
    }

    public void setOrOprtn(TOrOprtn node)
    {
        if(this._orOprtn_ != null)
        {
            this._orOprtn_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._orOprtn_ = node;
    }

    public PExprLogical getExprLogical()
    {
        return this._exprLogical_;
    }

    public void setExprLogical(PExprLogical node)
    {
        if(this._exprLogical_ != null)
        {
            this._exprLogical_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exprLogical_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._expr_)
            + toString(this._orOprtn_)
            + toString(this._exprLogical_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._expr_ == child)
        {
            this._expr_ = null;
            return;
        }

        if(this._orOprtn_ == child)
        {
            this._orOprtn_ = null;
            return;
        }

        if(this._exprLogical_ == child)
        {
            this._exprLogical_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._expr_ == oldChild)
        {
            setExpr((PExpr) newChild);
            return;
        }

        if(this._orOprtn_ == oldChild)
        {
            setOrOprtn((TOrOprtn) newChild);
            return;
        }

        if(this._exprLogical_ == oldChild)
        {
            setExprLogical((PExprLogical) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
