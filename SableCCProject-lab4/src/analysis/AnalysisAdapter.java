/* This file was generated by SableCC (http://www.sablecc.org/). */

package analysis;

import java.util.*;
import node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAProgram(AProgram node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAClassdeclsFirstClassDecls(AClassdeclsFirstClassDecls node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAClassdeclsSecondClassDecls(AClassdeclsSecondClassDecls node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAClassdeclFirstClassDecl(AClassdeclFirstClassDecl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAClassdeclSecondClassDecl(AClassdeclSecondClassDecl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAClasshdrFirstClassHdr(AClasshdrFirstClassHdr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMemberdeclsFirstMemberDecls(AMemberdeclsFirstMemberDecls node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMemberdeclsSecondMemberDecls(AMemberdeclsSecondMemberDecls node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMemberFirstMember(AMemberFirstMember node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMemberSecondMember(AMemberSecondMember node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMemberThirdMember(AMemberThirdMember node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFieldFirstField(AFieldFirstField node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFieldSecondField(AFieldSecondField node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFieldThirdField(AFieldThirdField node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATypeFirstType(ATypeFirstType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATypeSecondType(ATypeSecondType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATypeThirdType(ATypeThirdType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATypeFourthType(ATypeFourthType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATypeFifthType(ATypeFifthType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMethodFirstMethod(AMethodFirstMethod node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMethodSecondMethod(AMethodSecondMethod node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMethodhdrFirstMethodHdr(AMethodhdrFirstMethodHdr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMethodhdrSecondMethodHdr(AMethodhdrSecondMethodHdr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFormalsFirstFormals(AFormalsFirstFormals node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFormalsSecondFormals(AFormalsSecondFormals node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFormalFirstFormal(AFormalFirstFormal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFormalSecondFormal(AFormalSecondFormal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABlockFirstBlock(ABlockFirstBlock node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABlockSecondBlock(ABlockSecondBlock node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAStmtsFirstStmts(AStmtsFirstStmts node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAStmtsSecondStmts(AStmtsSecondStmts node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMifFirstMif(AMifFirstMif node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAStmtSecondMif(AStmtSecondMif node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAUifFirstUif(AUifFirstUif node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAUifSecondUif(AUifSecondUif node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAStmtFirstStmt(AStmtFirstStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAStmtSecondStmt(AStmtSecondStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACondition(ACondition node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALocaldeclFirstLocalDecl(ALocaldeclFirstLocalDecl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALocaldeclSecondLocalDecl(ALocaldeclSecondLocalDecl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALocaldeclThirdLocalDecl(ALocaldeclThirdLocalDecl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimplestmtFirstSimpleStmt(ASimplestmtFirstSimpleStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimplestmtSecondSimpleStmt(ASimplestmtSecondSimpleStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimplestmtThirdSimpleStmt(ASimplestmtThirdSimpleStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimplestmtFourthSimpleStmt(ASimplestmtFourthSimpleStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimplestmtFifthSimpleStmt(ASimplestmtFifthSimpleStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimplestmtSixthSimpleStmt(ASimplestmtSixthSimpleStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimplestmtSeventhSimpleStmt(ASimplestmtSeventhSimpleStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimplestmtEightthSimpleStmt(ASimplestmtEightthSimpleStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimplestmtNinthSimpleStmt(ASimplestmtNinthSimpleStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFieldaccessFirstFieldAccess(AFieldaccessFirstFieldAccess node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFieldaccessSecondFieldAccess(AFieldaccessSecondFieldAccess node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFieldaccessThirdFieldAccess(AFieldaccessThirdFieldAccess node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArrayrefFirstArrayRef(AArrayrefFirstArrayRef node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArrayrefSecondArrayRef(AArrayrefSecondArrayRef node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMethodcallFirstMethodCall(AMethodcallFirstMethodCall node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMethodcallSecondMethodCall(AMethodcallSecondMethodCall node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMethodcallThirdMethodCall(AMethodcallThirdMethodCall node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMethodcallFourthMethodCall(AMethodcallFourthMethodCall node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArgsFirstArgs(AArgsFirstArgs node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArgsSecondArgs(AArgsSecondArgs node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExprOneExpr(AExprOneExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExprTwoExpr(AExprTwoExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExprThreeExpr(AExprThreeExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEtwoFiveExprLogical(AEtwoFiveExprLogical node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEtwoSixExprLogical(AEtwoSixExprLogical node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEtwoOneExprLogical(AEtwoOneExprLogical node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEtwoTwoExprLogical(AEtwoTwoExprLogical node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEtwoThreeExprLogical(AEtwoThreeExprLogical node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEtwoFourExprLogical(AEtwoFourExprLogical node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEtwoSevenExprLogical(AEtwoSevenExprLogical node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEthreeOneExprAddSub(AEthreeOneExprAddSub node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEthreeTwoExprAddSub(AEthreeTwoExprAddSub node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEthreeThreeExprAddSub(AEthreeThreeExprAddSub node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEfourOneExprMulDiv(AEfourOneExprMulDiv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEfourTwoExprMulDiv(AEfourTwoExprMulDiv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEfourThreeExprMulDiv(AEfourThreeExprMulDiv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEfourFourExprMulDiv(AEfourFourExprMulDiv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEfiveOneExprUnaryOprt(AEfiveOneExprUnaryOprt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEfiveTwoExprUnaryOprt(AEfiveTwoExprUnaryOprt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEfiveThreeExprUnaryOprt(AEfiveThreeExprUnaryOprt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEFiveFourExprUnaryOprt(AEFiveFourExprUnaryOprt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPrimaryOnePrimary(APrimaryOnePrimary node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPrimaryTwoPrimary(APrimaryTwoPrimary node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPrimaryThreePrimary(APrimaryThreePrimary node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPrimaryFourPrimary(APrimaryFourPrimary node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPrimaryFivePrimary(APrimaryFivePrimary node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPrimarySixPrimary(APrimarySixPrimary node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPrimarySevenPrimary(APrimarySevenPrimary node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPrimaryEightPrimary(APrimaryEightPrimary node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPrimaryNinePrimary(APrimaryNinePrimary node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTWhiteSpace(TWhiteSpace node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMultilineComment(TMultilineComment node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSingleComment(TSingleComment node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIntegerConstant(TIntegerConstant node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTStringLiteral(TStringLiteral node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCharacterConstant(TCharacterConstant node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFloatingConstant(TFloatingConstant node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDot(TDot node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComma(TComma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTColon(TColon node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSemicolon(TSemicolon node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLPar(TLPar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRPar(TRPar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLBracket(TLBracket node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRBracket(TRBracket node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLBrace(TLBrace node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRBrace(TRBrace node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTStar(TStar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDiv(TDiv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMod(TMod node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAmpersand(TAmpersand node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPlus(TPlus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMinus(TMinus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTExclMark(TExclMark node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBar(TBar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEqual(TEqual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEq(TEq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNeq(TNeq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLt(TLt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLteq(TLteq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTGt(TGt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTGteq(TGteq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTArrow(TArrow node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAndOprtn(TAndOprtn node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOrOprtn(TOrOprtn node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTModEqual(TModEqual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPlusEqual(TPlusEqual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMinusEqual(TMinusEqual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAmpersandEqual(TAmpersandEqual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCaretEqual(TCaretEqual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBool(TBool node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBreak(TBreak node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTChar(TChar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTConst(TConst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTContinue(TContinue node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTClazz(TClazz node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDo(TDo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTElse(TElse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFalse(TFalse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFloat(TFloat node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIf(TIf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInt(TInt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNew(TNew node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNull(TNull node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPrivate(TPrivate node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTProtected(TProtected node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPublic(TPublic node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTReturn(TReturn node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTStatic(TStatic node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTString(TString node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTStruct(TStruct node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTThis(TThis node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTrue(TTrue node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTWhile(TWhile node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVoid(TVoid node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTId(TId node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
